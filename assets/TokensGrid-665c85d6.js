import{j as e}from"./jsx-runtime-ffb262ed.js";function a({type:n,value:t}){switch(n){case"fontSizes":return e.jsx("td",{style:{alignItems:"center"},children:e.jsx("p",{style:{fontSize:`${t}`,fontFamily:"monospace",color:"#FFF"},children:"Texto de exemplo."})});case"fontWeights":return e.jsx("td",{style:{alignItems:"center"},children:e.jsx("p",{style:{fontWeight:`${t}`,fontSize:18,fontFamily:"monospace",color:"#FFF"},children:"Texto de exemplo para demonstrar o peso da fonte."})});case"fonts":return e.jsx("td",{style:{alignItems:"center"},children:e.jsx("p",{style:{fontFamily:`${t}`,fontSize:18,color:"#FFF"},children:"Texto de exemplo para demonstrar o estilo da fonte."})});case"lineHeights":return e.jsx("td",{style:{alignItems:"center"},children:e.jsx("p",{style:{lineHeight:`${t}`,fontFamily:"monospace",fontSize:18,color:"#FFF"},children:"A propriedade CSS line-height define a altura de uma linha e o espaçamento entre as linhas de um texto. A distância é medida entre as linhas de base (baseline) de duas linhas consecutivas."})});case"radii":return e.jsx("td",{style:{alignItems:"center"},children:e.jsx("div",{style:{backgroundColor:"#22D3EE",width:40,height:40,borderRadius:`${t}`}})});case"space":return console.log("value",t),e.jsx("td",{style:{alignItems:"center"},children:e.jsx("div",{style:{width:`${t}`,height:"16px",backgroundColor:"#22D3EE"}})});default:return e.jsx("span",{children:t})}}try{a.displayName="TokenExampleGrid",a.__docgenInfo={description:"",displayName:"TokenExampleGrid",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"fontSizes"'},{value:'"fontWeights"'},{value:'"fonts"'},{value:'"lineHeights"'},{value:'"radii"'},{value:'"space"'}]}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}}}}}catch{}function l({tokens:n,type:t,hasRemValue:i=!1}){const o=r=>i?Number(r.replace("rem",""))*16:Number(r.replace("px",""));return e.jsxs("table",{className:"tokens-grid",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Name"}),e.jsx("th",{children:"Value"}),i&&e.jsxs(e.Fragment,{children:[e.jsx("th",{children:"Pixels"}),e.jsx("th",{})]})]})}),e.jsx("tbody",{children:Object.entries(n).map(([r,s])=>{const d=o(s);return e.jsxs("tr",{children:[e.jsx("td",{children:r}),e.jsx("td",{children:s}),i&&e.jsxs("td",{children:[d,"px"]}),e.jsx(a,{type:t,value:s})]},r)})})]})}try{l.displayName="TokensGrid",l.__docgenInfo={description:"",displayName:"TokensGrid",props:{tokens:{defaultValue:null,description:"",name:"tokens",required:!0,type:{name:"Record<string, string>"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"string"}},hasRemValue:{defaultValue:{value:"false"},description:"",name:"hasRemValue",required:!1,type:{name:"boolean"}}}}}catch{}export{l as T};
